rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /calls/{callId} {
      allow get: if request.auth != null && request.auth.uid in resource.data.attendees;
      allow list: if request.auth != null;
      allow create: if request.auth != null && !exists(request.path) && callId.matches("^[a-z]{3}-[a-z]{3}$");
      allow update, delete: if request.auth != null && resource.data.host == request.auth.uid;

      match /participants/{userId} {
        allow read: if exists(/databases/$(database)/documents/calls/$(callId)/participants/$(request.auth.uid));
        allow write: if request.auth.uid == userId;

        match /clients/{otherId} {
          allow read, write: if request.auth.uid == otherId || request.auth.uid == userId;

          match /candidates/{offer} {
            allow read, write: if request.auth.uid == otherId || request.auth.uid == userId;
          }
        }
      }

      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && !exists(request.path);
      }
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if true;
    }
  }
}